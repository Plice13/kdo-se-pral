class Darkmode {
    constructor(options = {}) {
      if (typeof window === "undefined") return;
  
      this.options = Object.assign({
        bottom: "32px",
        right: "32px",
        left: "unset",
        time: "0.3s",
        mixColor: "#fff",
        backgroundColor: "#fff",
        buttonColorDark: "#100f2c",
        buttonColorLight: "#fff",
        label: "",
        saveInCookies: true,
        autoMatchOsTheme: true,
      }, options);
  
      // Vytvoříme potřebné DOM elementy
      this.layer = document.createElement("div");
      this.button = document.createElement("button");
      this.background = document.createElement("div");
  
      this.button.innerHTML = this.options.label;
      this.button.classList.add("darkmode-toggle", "darkmode-toggle--inactive");
      this.layer.classList.add("darkmode-layer");
      this.background.classList.add("darkmode-background");
  
      // Zjisti preferovanou hodnotu
      const userPref = window.localStorage.getItem("darkmode");
      const osPrefersDark = window.matchMedia("(prefers-color-scheme: dark)").matches;
      const noStoredPref = userPref === null;
      const shouldActivate = (userPref === "true" && this.options.saveInCookies) || (noStoredPref && this.options.autoMatchOsTheme && osPrefersDark);
  
      if (shouldActivate) {
        this.layer.classList.add("darkmode-layer--expanded", "darkmode-layer--simple", "darkmode-layer--no-transition");
        this.button.classList.add("darkmode-toggle--white");
        document.body.classList.add("darkmode--activated");
      }
  
      // Přidej styly a DOM prvky do stránky
      this.addStyle(this.generateCSS());
      document.body.insertBefore(this.button, document.body.firstChild);
      document.body.insertBefore(this.layer, document.body.firstChild);
      document.body.insertBefore(this.background, document.body.firstChild);
  
      // Nastavení
      this.time = this.options.time;
      this.saveInCookies = this.options.saveInCookies;
    }
  
    addStyle(cssString) {
      const styleTag = document.createElement("link");
      styleTag.setAttribute("rel", "stylesheet");
      styleTag.setAttribute("type", "text/css");
      styleTag.setAttribute("href", `data:text/css;charset=UTF-8,${encodeURIComponent(cssString)}`);
      document.head.appendChild(styleTag);
    }
  
    generateCSS() {
      const t = this.options;
      return `
        .darkmode-layer {
          position: fixed;
          pointer-events: none;
          background: ${t.mixColor};
          transition: all ${t.time} ease;
          mix-blend-mode: difference;
        }
        .darkmode-layer--button {
          width: 2.9rem;
          height: 2.9rem;
          border-radius: 50%;
          right: ${t.right};
          bottom: ${t.bottom};
          left: ${t.left};
        }
        .darkmode-layer--simple {
          width: 100%;
          height: 100%;
          top: 0;
          left: 0;
          transform: scale(1) !important;
        }
        .darkmode-layer--expanded {
          transform: scale(100);
          border-radius: 0;
        }
        .darkmode-layer--no-transition {
          transition: none;
        }
        .darkmode-toggle {
          background: ${t.buttonColorDark};
          width: 3rem;
          height: 3rem;
          position: fixed;
          border-radius: 50%;
          border: none;
          right: ${t.right};
          bottom: ${t.bottom};
          left: ${t.left};
          cursor: pointer;
          transition: all 0.5s ease;
          display: flex;
          justify-content: center;
          align-items: center;
        }
        .darkmode-toggle--white {
          background: ${t.buttonColorLight};
        }
        .darkmode-toggle--inactive {
          display: none;
        }
        .darkmode-background {
          background: ${t.backgroundColor};
          position: fixed;
          pointer-events: none;
          z-index: -10;
          width: 100%;
          height: 100%;
          top: 0;
          left: 0;
        }
        img, .darkmode-ignore {
          isolation: isolate;
          display: inline-block;
        }
        @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none),
               (-ms-ime-align: auto), (-ms-accelerator: true) {
          .darkmode-toggle { display: none !important; }
        }
      `;
    }
  
    showWidget() {
      if (typeof window === "undefined") return;
  
      const btn = this.button;
      const layer = this.layer;
      const duration = 1000 * parseFloat(this.time);
  
      btn.classList.remove("darkmode-toggle--inactive");
      btn.setAttribute("aria-label", "Activate dark mode");
      btn.setAttribute("aria-checked", "false");
      btn.setAttribute("role", "checkbox");
  
      layer.classList.add("darkmode-layer--button");
  
      btn.addEventListener("click", () => {
        const isOn = this.isActivated();
  
        if (isOn) {
          layer.classList.remove("darkmode-layer--simple");
          btn.disabled = true;
          setTimeout(() => {
            layer.classList.remove("darkmode-layer--no-transition", "darkmode-layer--expanded");
            btn.disabled = false;
          }, 1);
        } else {
          layer.classList.add("darkmode-layer--expanded");
          btn.disabled = true;
          setTimeout(() => {
            layer.classList.add("darkmode-layer--no-transition", "darkmode-layer--simple");
            btn.disabled = false;
          }, duration);
        }
  
        btn.classList.toggle("darkmode-toggle--white");
        document.body.classList.toggle("darkmode--activated");
        window.localStorage.setItem("darkmode", !isOn);
      });
    }
  
    toggle() {
      if (typeof window === "undefined") return;
  
      const isOn = this.isActivated();
      this.layer.classList.toggle("darkmode-layer--simple");
      document.body.classList.toggle("darkmode--activated");
      this.button.setAttribute("aria-label", isOn ? "De-activate dark mode" : "Activate dark mode");
      this.button.setAttribute("aria-checked", String(!isOn));
      window.localStorage.setItem("darkmode", !isOn);
    }
  
    isActivated() {
      return typeof window !== "undefined" && document.body.classList.contains("darkmode--activated");
    }
  }
  
  // Zpřístupnění jako globální objekt
  if (typeof window !== "undefined") {
    window.Darkmode = Darkmode;
  }
  